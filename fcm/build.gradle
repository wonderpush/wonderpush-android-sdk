apply plugin: 'com.android.library'

project.group = 'com.wonderpush'
project.archivesBaseName = 'wonderpush-android-sdk-fcm'
project.version = "1.0.7"

android {
    defaultConfig {
        compileSdk 33
        minSdkVersion 19
        buildConfigField 'String', 'WONDERPUSH_FCM_VERSION', '"' + project.version + '"'

        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    resourcePrefix 'wonderpush_android_sdk_fcm_'
    namespace 'com.wonderpush.sdk.push.fcm'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly project(':sdk')
    runtimeOnly "com.wonderpush:wonderpush-android-sdk:[3.4.0,)"
    implementation "com.google.firebase:firebase-messaging:23.2.1"
    implementation "com.google.android.gms:play-services-basement:18.2.0" // for GoogleApiAvailabilityLight
}

if (file('local.gradle').exists()) {
    apply from: 'local.gradle'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Xdiags:verbose"
}

apply plugin: 'maven-publish'
apply plugin: 'signing'

publishing {
    publications {
        release(MavenPublication) {
            afterEvaluate {
                from components.release // identical to artifact bundleReleaseAar
                artifact androidSourcesJar
                artifact androidJavadocsJar
            }
            groupId = project.group
            artifactId = project.archivesBaseName
            version = project.version
            pom {
                packaging = 'aar'
                groupId = project.group
                artifactId = 'wonderpush-android-sdk-fcm'

                name = 'WonderPush Android SDK FCM'
                description = 'WonderPush Android SDK FCM'
                url = 'https://github.com/wonderpush/wonderpush-android-sdk'

                scm {
                    connection = 'scm:git@github.com:wonderpush/wonderpush-android-sdk.git'
                    developerConnection = 'scm:git@github.com:wonderpush/wonderpush-android-sdk.git'
                    url = 'https://github.com/wonderpush/wonderpush-android-sdk'
                }

                licenses {
                    license {
                        name = 'Apache 2.0'
                        url = 'https://github.com/wonderpush/wonderpush-android-sdk/blob/master/LICENSE.txt'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'wonderpush'
                        name = 'WonderPush'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = 'wonderpush-android-sdk-fcm-repository'
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                if (project.hasProperty('wonderpush_publishing_repositories_maven_credentials_username')) {
                    username = wonderpush_publishing_repositories_maven_credentials_username
                }
                if (project.hasProperty('wonderpush_publishing_repositories_maven_credentials_password')) {
                    password = wonderpush_publishing_repositories_maven_credentials_password
                }
            }
        }
    }
}

afterEvaluate {
    signing {
        useGpgCmd()
        sign publishing.publications
        sign configurations.archives
    }
}

task androidJavadocs(type: Javadoc) {
    title = 'WonderPush Android SDK FCM Reference'
    source = [] //android.sourceSets.main.java.srcDirs
    doFirst {
        classpath = project.files(
                project.android.libraryVariants.toList().first().javaCompileProvider.get().classpath.files,
                project.android.getBootClasspath(),
                "$projectDir/build/generated/ap_generated_sources/release/out",
                "$projectDir/build/generated/ap_generated_sources/debug/out",
                "$projectDir/build/intermediates/javac/release/compileReleaseJavaWithJavac/classes",
                "$projectDir/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes",
                android.sourceSets.main.java.srcDirs
        )
    }
    options.overview = project.rootDir.path + '/overview.html'
    options.showFromPublic()
    // JDK 1.8 is more strict then 1.7. Have JDK 1.8 behave like 1.7 for javadoc generation
    options.addStringOption('Xdoclint:none', '-quiet')
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}
